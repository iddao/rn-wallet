/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RSAVerifier, RSAVerifierInterface } from "../RSAVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_modulus",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_exponent",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_msgHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "verifySignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x610aa8610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063f7f5d2db1461003a575b600080fd5b610054600480360381019061004f9190610802565b61006a565b60405161006191906108d8565b60405180910390f35b6000806100788386886100a0565b90506100848185610141565b610092576000915050610098565b60019150505b949350505050565b606060006100af8585856104d2565b905060006103609050600061010067ffffffffffffffff8111156100d6576100d56106a1565b5b6040519080825280601f01601f1916602001820160405280156101085781602001600182028036833780820191505090505b50905061010060208201836020860160056107d05a03fa806000811461012d57610132565b600080fd5b50508093505050509392505050565b6000600b60136020610153919061092f565b61015d919061092f565b60ff168351101561017157600090506104cc565b60006020601360ff16600386516101889190610970565b6101929190610970565b61019c9190610970565b9050600060f81b846000815181106101b7576101b66109a4565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415806102355750600160f81b84600181518110610205576102046109a4565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b8061028f5750600060f81b8460028361024e91906109d3565b8151811061025f5761025e6109a4565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b1561029e5760009150506104cc565b60005b8181101561031d5760ff60f81b856002836102bc91906109d3565b815181106102cd576102cc6109a4565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461030a576000925050506104cc565b808061031590610a29565b9150506102a1565b5060005b601360ff168110156103f657723031300d06096086480165030402010500042060681b8160138110610356576103556109a4565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916858260038561038b91906109d3565b61039591906109d3565b815181106103a6576103a56109a4565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146103e3576000925050506104cc565b80806103ee90610a29565b915050610321565b5060005b60208110156104c557838160208110610416576104156109a4565b5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168582601360ff1660038661045091906109d3565b61045a91906109d3565b61046491906109d3565b81518110610475576104746109a4565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146104b2576000925050506104cc565b80806104bd90610a29565b9150506103fa565b5060019150505b92915050565b606061010084511480156104e857506101008251145b80156104f75750610100835111155b8015610504575060008351115b61050d57600080fd5b60008351905060008161026061052391906109d3565b905060008060008060008567ffffffffffffffff811115610547576105466106a1565b5b6040519080825280601f01601f1916602001820160405280156105795781602001600182028036833780820191505090505b50905060208b01945060208a019350602089019250610100602082015286604082015261010060608201526020810191506105c36060836105ba91906109d3565b86610100610629565b6105e76101006060846105d691906109d3565b6105e091906109d3565b8589610629565b610618876101006060856105fb91906109d3565b61060591906109d3565b61060f91906109d3565b84610100610629565b809750505050505050509392505050565b5b6020811061064d578151835260208301925060208201915060208103905061062a565b60006001826020036101000a0390508019835116818551168181178652505050505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6106d982610690565b810181811067ffffffffffffffff821117156106f8576106f76106a1565b5b80604052505050565b600061070b610672565b905061071782826106d0565b919050565b600067ffffffffffffffff821115610737576107366106a1565b5b61074082610690565b9050602081019050919050565b82818337600083830152505050565b600061076f61076a8461071c565b610701565b90508281526020810184848401111561078b5761078a61068b565b5b61079684828561074d565b509392505050565b600082601f8301126107b3576107b2610686565b5b81356107c384826020860161075c565b91505092915050565b6000819050919050565b6107df816107cc565b81146107ea57600080fd5b50565b6000813590506107fc816107d6565b92915050565b6000806000806080858703121561081c5761081b61067c565b5b600085013567ffffffffffffffff81111561083a57610839610681565b5b6108468782880161079e565b945050602085013567ffffffffffffffff81111561086757610866610681565b5b6108738782880161079e565b9350506040610884878288016107ed565b925050606085013567ffffffffffffffff8111156108a5576108a4610681565b5b6108b18782880161079e565b91505092959194509250565b60008115159050919050565b6108d2816108bd565b82525050565b60006020820190506108ed60008301846108c9565b92915050565b600060ff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061093a826108f3565b9150610945836108f3565b92508260ff0382111561095b5761095a610900565b5b828201905092915050565b6000819050919050565b600061097b82610966565b915061098683610966565b92508282101561099957610998610900565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006109de82610966565b91506109e983610966565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a1e57610a1d610900565b5b828201905092915050565b6000610a3482610966565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a6757610a66610900565b5b60018201905091905056fea264697066735822122062d99baa95eaa343a3f03acb03661421651a69450e84c38012acf46ae20596ae64736f6c63430008090033";

export class RSAVerifier__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RSAVerifier> {
    return super.deploy(overrides || {}) as Promise<RSAVerifier>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RSAVerifier {
    return super.attach(address) as RSAVerifier;
  }
  connect(signer: Signer): RSAVerifier__factory {
    return super.connect(signer) as RSAVerifier__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RSAVerifierInterface {
    return new utils.Interface(_abi) as RSAVerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RSAVerifier {
    return new Contract(address, _abi, signerOrProvider) as RSAVerifier;
  }
}
